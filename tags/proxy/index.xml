<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proxy on 小熊猫快站起来</title>
    <link>https://suikaremilia.github.io/tags/proxy/</link>
    <description>Recent content in Proxy on 小熊猫快站起来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jul 2020 14:15:12 +0000</lastBuildDate><atom:link href="https://suikaremilia.github.io/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Set up proxy for podman</title>
      <link>https://suikaremilia.github.io/post/set-up-proxy-for-podman/</link>
      <pubDate>Mon, 20 Jul 2020 14:15:12 +0000</pubDate>
      
      <guid>https://suikaremilia.github.io/post/set-up-proxy-for-podman/</guid>
      <description>背景如题，方案在/etc/profile.d/下配置：
# cat /etc/profile.d/http_proxy.sh export HTTP_PROXY=http://192.168.0.1:8080 export HTTPS_PROXY=http://192.168.0.1:8080 或直接export，但前者对ansible也生效，后者只能是该终端的用户
貌似都是废话，其他程序配置Proxy，用常规的用export命令配置环境变量不生效的时候，也可以试试这样……</description>
    </item>
    
    <item>
      <title>Caddy翻墙</title>
      <link>https://suikaremilia.github.io/post/caddy-fucke-gfw/</link>
      <pubDate>Mon, 06 Apr 2020 10:09:28 +0000</pubDate>
      
      <guid>https://suikaremilia.github.io/post/caddy-fucke-gfw/</guid>
      <description>Caddy有个模块很好用，经过简单的配置即可以https或http2的方式跨越防火墙，不需要单独申请证书同时还有正常网站做伪装，配合浏览器switch omega插件，方便快捷的访问被墙的资源。
安装： curl https://getcaddy.com | bash -s personal http.forwardproxy 配置一个正常网站： 创建文件并赋权等杂项：
setcap &amp;#39;cap_net_bind_service=+ep&amp;#39; /usr/local/bin/caddy useradd -r -d /var/www -M -s /sbin/nologin caddy chown -R caddy:caddy /var/www mkdir /etc/caddy chown -R root:caddy /etc/caddy touch /etc/caddy/Caddyfile chown caddy:caddy /etc/caddy/Caddyfile mkdir /var/log/caddy chown caddy:caddy /var/log/caddy/ mkdir -p /var/www/xxx.yyy.zzz chown -R caddy:caddy /var/www mkdir -p /etc/ssl/caddy chown -R caddy:caddy /etc/ssl/caddy 编辑配置文件：
vim /etc/caddy/Caddyfile https://xxx.yyy.zzz { //xxx.yyy.zzz为可以解析到本机的域名，下同 log /var/log/caddy/xxx.log errors /var/log/caddy/xxx.error root /var/www/xxx.yyy.zzz gzip tls &amp;lt;xxx@xxxxx.</description>
    </item>
    
  </channel>
</rss>
